pipeline:
  nightly_patch:
    image: maxvasin/resolve-docker
    pull: true
    commands:
      - touch .params
      - if [ -z $REGISTRY_DOWNSTREAM ]; then exit 0; fi
      - echo REGISTRY_BUILD_REPO=$DRONE_REPO >> .entry
      - echo REGISTRY_BUILD_NUMBER=$DRONE_BUILD_NUMBER >> .entry
      # - echo NIGHTLY_PACKAGE=$NIGHTLY_PACKAGE >> .nightly
      # - echo NIGHTLY_VERSION=$NIGHTLY_VERSION >> .nightly
      - /scripts/package_json patch-dependencies @badgeteam/drone-fake $REGISTRY_VERSION
      - cat .params

  install_packages:
    image: node:9
    commands:
      - npm install


  test:
    image: node:9
    commands:
      - cat ./node_modules/@badgeteam/drone-fake/package.json

  build_success:
    image: node:9
    commands:
      - echo REGISTRY_BUILD_STATUS=success >> .entry
    when:
      status: [ success ]

  build_failure:
    image: node:9
    commands:
      - echo REGISTRY_BUILD_STATUS=failure >> .entry
    when:
      status: [ failure ]

  downstream_registry:
    image: maxvasin/drone-downstream-registry
    pull: true
    registry_path: /data/registry
    action: downstream-build
    params: .entry
    volumes:
      - /srv/ecs/downstream-registry:/data/registry
    when:
      status: [ success, failure ]



